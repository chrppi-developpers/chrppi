<%inc #include "../source/config.hh" %>
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>chrppi</title>
		<link rel="stylesheet" href="css/bulma.css"/>
		<script defer src="js/fontawesome.js"></script>
	</head>

	<body>
		<%c++
			const auto & errors(@@.get<std::vector<std::string>>(config::html::error_id));
			if (!errors.empty())
			{
				$$ << "<section class=\"section\"> <div class=\"notification is-danger\"> <p class=\"title\">ERROR</p> <ul>";
					for (const auto & error: errors)
						$$ << "<li>" << error << "</li>";
				$$ << "</ul></div></section>";
			}
		%>

		<section class="section">
			<div class="columns is-multiline is-centered">
	
				<div class="column is-one-two">

					<form method="post">
						<div class="field">
							<div class="select">
								<select name="{% config::html::select_example %}" onchange="form.submit()">
									<option selected disabled>Load an example</option>
									<%c++ for (const auto & filename: @@.get<std::vector<std::string>>(config::html::chr_examples)){%>
										<option value="{% filename %}">{% filename.substr(0, filename.find_last_of(".")) %}</option>
									<%c++}%>

								</select>
							</div>
						</div>
						<textarea class="textarea" placeholder="CHR code" rows="20">{% @@.get<std::string>(config::html::chr_code) %}</textarea>
					</form>

					<div class="field has-addons">
						<form method="post">
							<p class="control">
								<button class="button" type="submit" name="{% config::html::download_session %}" value="get">
									<span class="icon is-small">
										<i class="fas fa-download"></i>
									</span>
									<span>download session</span>
								</button>
							</p>
						</form>
					
						<form method="post" enctype="multipart/form-data" action="upload_session">
							<p class="control">
								<div class="file">
									<label class="file-label">
										<input class="file-input" type="file" name="{% config::html::upload_session %}" accept=".json" onchange="form.submit()">
										<span class="file-cta">
											<span class="file-icon">
												<i class="fas fa-upload"></i>
											</span>
											<span class="file-label">upload session</span>
										</span>
									</label>
								</div>
							</p>
						</form>

					</div>

				</div>

				<div class="column is-one-two">
					
					<div class="my-3">
					<form method="post">
						<fieldset class="box">
							<legend class="label has-text-centered">Add a constraint</legend>
							<div class="field">
								<label class="label" for="{% config::html::add_constraint_value %}">Constraint</label>
								<div class="control">
									<input class="input" type="text" name="{% config::html::add_constraint_value %}">
								</div>
							</div>
							<div class="field">
								<div class="control has-text-centered">
									<input class="button" type="submit" name="{% config::html::add_constraint %}" value="add" />
								</div>
							</div>
						</fieldset>
					</form>
					</div>

					<form method="post">
						<fieldset class="box">
							<legend class="label has-text-centered">Constraint store</legend>
							<table class="table is-fullwidth">
								<thead>
								  <tr>
									<th>constraint</th>
								  </tr>
								</thead>
								<tbody>
									<%c++ for (const auto & constraint: @@.get<std::vector<std::string>>(config::html::constraint_store)){%>
										<tr>
											<td>{% constraint %}</td>
										</tr>
									<%c++}%>
								</tbody>
							</table>
							<div class="field">
								<div class="control has-text-centered">
									<input class="button" type="submit" name="{% config::html::clear_constraint_store %}" value="clear" />
								</div>
							</div>
						</fieldset>
					</form>

					<form method="post">
						<fieldset class="box">
							<legend class="label has-text-centered">Track a variable</legend>
							<div class="field">
								<label class="label" for="{% config::html::track_variable_type %}">Type</label>
								<div class="control">
									<input class="input" type="text" name="{% config::html::track_variable_type %}" size="20">
								</div>
							</div>
							<div class="field">
								<label class="label" for="{% config::html::track_variable_name %}">Name</label>
								<div class="control">
									<input class="input" type="text" name="{% config::html::track_variable_name %}" size="20">
								</div>
							</div>
							<div class="field">
								<label class="label">
									Mutable
									<input type="checkbox" name="{% config::html::track_variable_mutable %}">
								</label>
							</div>
							<div class="field">
								<div class="control has-text-centered">
									<input class="button" type="submit" name="{% config::html::track_variable %}" value="track" />
								</div>
							</div>
						</fieldset>
					</form>

					<form method="post">
						<fieldset class="box">
							<legend class="label has-text-centered">Tracked variables</legend>
							<table class="table is-fullwidth">
								<thead>
									<tr>
										<th>variable</th>
										<th>value</th>
									</tr>
								</thead>
								<tbody>
									<%c++ for (const auto & variable: @@.get<std::vector<std::pair<std::string, std::string>>>(config::html::tracked_variables)){%>
										<tr>
											<td>{%  variable.first %}</td>
											<td>{% variable.second %}</td>
										</tr>
									<%c++}%>
								</tbody>
							</table>
							<div class="field">
								<div class="control has-text-centered">
									<input class="button" type="submit" name="{% config::html::clear_tracked_variables %}" value="clear" />
								</div>
							</div>
						</fieldset>
					</form>
				</div>
			</div>
		</section>
	</body>
</html>