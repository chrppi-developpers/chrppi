//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "index_view.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string index_view::genText(const DrTemplateData& index_view_view_data)
{
	drogon::OStringStream index_view_tmp_stream;
	std::string layoutName{""};
	index_view_tmp_stream << "<!DOCTYPE html>\n";
	index_view_tmp_stream << "<html>\n";
	auto name=index_view_view_data.get<std::string>("name");
	bool nameIsEmpty = name == "";
	if (nameIsEmpty)
		name = "anonymous";
	auto message = "Hello, " + name + " from a CSP template";
	index_view_tmp_stream << "<head>\n";
	index_view_tmp_stream << "	<meta charset=\"UTF-8\">\n";
	index_view_tmp_stream << "	<title>";
{
    auto & val=index_view_view_data["name"];
    if(val.type()==typeid(const char *)){
        index_view_tmp_stream<<*(std::any_cast<const char *>(&val));
    }else if(val.type()==typeid(std::string)||val.type()==typeid(const std::string)){
        index_view_tmp_stream<<*(std::any_cast<const std::string>(&val));
    }
}
	index_view_tmp_stream << "</title>\n";
	index_view_tmp_stream << "</head>\n";
	index_view_tmp_stream << "<body>\n";
	index_view_tmp_stream << "	";
 index_view_tmp_stream<<message; 
	index_view_tmp_stream << "	";
	if (nameIsEmpty)
	{
		index_view_tmp_stream << "<br>"
			<< "You can revisit the same page and append ?name=<i>your_name</i> to change the name";
	}
	
	index_view_tmp_stream << "</body>\n";
	index_view_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(index_view_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = index_view_view_data;
auto str = std::move(index_view_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
